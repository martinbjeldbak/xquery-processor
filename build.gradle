buildscript {
    repositories {
        maven {
            name 'JFrog OSS snapshot repo'
            url  'https://oss.jfrog.org/oss-snapshot-local/'
        }
        jcenter()
    }

    dependencies {
        classpath 'me.champeau.gradle:antlr4-gradle-plugin:0.1'
    }
}

plugins {
}

apply plugin: 'java'
apply plugin: 'application' // let this project be runnable
apply plugin: 'idea'
apply plugin: 'me.champeau.gradle.antlr4'

mainClassName = 'dk.martinbmadsen.xquery.main.Main'
sourceCompatibility = 1.8
version = '1.0'

def genSrcPath = 'target/generated-sources'
def antlrGenPath = genSrcPath + '/antlr'
def grammarGenPath = antlrGenPath + '/dk/martinbmadsen/xquery/parser' // path where antlr4 code is generated

repositories {
    mavenCentral()
    jcenter()
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

compileJava.dependsOn antlr4
antlr4.output = file(grammarGenPath)
antlr4.listener = false

sourceSets.main.java.srcDir genSrcPath
sourceSets.test.java.srcDir genSrcPath

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile 'org.jdom:jdom2:2.0.6'
    compile 'org.antlr:antlr4-runtime:4.5'
    compile 'jaxen:jaxen:1.1.6'
    compile 'com.pholser:junit-quickcheck-core:0.5-alpha-1'
    compile 'com.pholser:junit-quickcheck-generators:0.2'
}

clean.delete genSrcPath // Remove any auto-generated source files (Java classes/interfaces/etc)

allprojects {
    tasks.withType(JavaCompile) {
        //options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
    }
}

// Intellij IDEA config
idea.module.sourceDirs += file(antlrGenPath) // Add folder with generated source files to src
idea.module.generatedSourceDirs += file(antlrGenPath) // Set same folder as a 'generated source' code folder

task fatJar(type: Jar) {
    // Src: http://www.mkyong.com/gradle/gradle-create-a-jar-file-with-dependencies/
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File ',
                'Implementation-Version': version,
                'Main-Class': mainClassName
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}